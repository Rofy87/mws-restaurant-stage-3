{"version":3,"sources":["sw.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","obj","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_idb","_idb2","__esModule","default","DBHelper","instance","TypeError","_classCallCheck","this","open","upgradeDB","oldVersion","createObjectStore","keyPath","createIndex","DBOpen","then","db","transaction","objectStore","getAll","items","forEach","item","put","complete","console","log","catch","ex","id","index","parseInt","data","fetch","REVIEW_DATABASE_URL","method","headers","Accept","Content-Type","body","JSON","stringify","response","json","reviews","push","addReviewsToCache","clear","clearOfflineReviews","getAllReviewsFromOfflineCache","sendReview","callback","getRestaurantsFromCache","restaurants","RESTAURANT_DATABASE_URL","addRestaurantsToCache","fetchRestaurants","error","restaurant","find","REVIEWS_DATABASE_URL","Promise","all","getReviewsFromCache","getReviewsFromOfflineCache","_ref","concat","apply","arr","Array","isArray","arr2","from","_toConsumableArray","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","google","maps","Marker","position","latlng","title","name","url","urlForRestaurant","animation","Animation","DROP","idb","2","_dbhelper","_dbhelper2","appCache","imgsCache","allCaches","urlsToCache","self","addEventListener","event","waitUntil","caches","cache","addAll","request","requestUrl","URL","pathname","startsWith","includes","respondWith","match","networkResponse","clone","ignoreSearch","tag","sendOfflineReviewsToDatabse","keys","cacheNames","cacheName","./js/dbhelper","3","promisifyRequest","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","args","proxyProperties","ProxyClass","targetProp","properties","prop","get","set","val","proxyRequestMethods","arguments","proxyMethods","proxyCursorRequestMethods","Cursor","Index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","slice","nativeObject","query","count","iterateCursor","undefined","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","delete"],"mappings":"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","file":"../sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n/**\r\n * Common database helper functions.\r\n */\n\n\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, null, [{\n    key: 'DBOpen',\n    value: function DBOpen() {\n      var dbPromise = _idb2.default.open('mws', 2, function (upgradeDB) {\n\n        switch (upgradeDB.oldVersion) {\n          case 0:\n            var restaurantsStore = upgradeDB.createObjectStore('restaurants', { keyPath: 'id' });\n          case 1:\n            var reviewsStore = upgradeDB.createObjectStore('reviews', { keyPath: 'id' });\n            reviewsStore.createIndex('restaurant', 'restaurant_id');\n            var offlineStore = upgradeDB.createObjectStore('offlineReviews', { keyPath: 'createdAt' });\n            offlineStore.createIndex('restaurant', 'restaurant_id');\n\n        }\n      });\n      return dbPromise;\n    }\n  }, {\n    key: 'getRestaurantsFromCache',\n    value: function getRestaurantsFromCache() {\n      return DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction('restaurants', 'readonly');\n        var objectStore = transaction.objectStore('restaurants');\n        return objectStore.getAll();\n      });\n    }\n  }, {\n    key: 'addRestaurantsToCache',\n    value: function addRestaurantsToCache(items) {\n      DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction(['restaurants'], 'readwrite');\n        var objectStore = transaction.objectStore('restaurants');\n        items.forEach(function (item) {\n          return objectStore.put(item);\n        });\n        return transaction.complete;\n      }).then(function () {\n        console.log(\"Restaurants were added to Cache\");\n      }).catch(function (ex) {\n        console.log(\"Failed to Add  Restaurant to Cache\");\n      });\n    }\n  }, {\n    key: 'getReviewsFromCache',\n    value: function getReviewsFromCache(id) {\n\n      return DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction('reviews', 'readonly');\n        var objectStore = transaction.objectStore('reviews');\n        var reviewIndex = objectStore.index('restaurant');\n        return reviewIndex.getAll(parseInt(id));\n      });\n    }\n  }, {\n    key: 'getReviewsFromOfflineCache',\n    value: function getReviewsFromOfflineCache(id) {\n      return DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction('offlineReviews', 'readonly');\n        var objectStore = transaction.objectStore('offlineReviews');\n        var reviewIndex = objectStore.index('restaurant');\n        return reviewIndex.getAll(parseInt(id));\n      });\n    }\n  }, {\n    key: 'getAllReviewsFromOfflineCache',\n    value: function getAllReviewsFromOfflineCache() {\n      return DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction('offlineReviews', 'readonly');\n        var objectStore = transaction.objectStore('offlineReviews');\n        return objectStore.getAll();\n      });\n    }\n  }, {\n    key: 'addReviewsToCache',\n    value: function addReviewsToCache(items) {\n      DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction(['reviews'], 'readwrite');\n        var objectStore = transaction.objectStore('reviews');\n        items.forEach(function (item) {\n          return objectStore.put(item);\n        });\n        return transaction.complete;\n      }).then(function () {\n        console.log(\"Reviews were added to Cache\");\n      }).catch(function (ex) {\n        console.log(\"Failed to Add Reviews to Cache\");\n      });\n    }\n  }, {\n    key: 'addReviewsToOfflineCache',\n    value: function addReviewsToOfflineCache(item) {\n      DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction(['offlineReviews'], 'readwrite');\n        var objectStore = transaction.objectStore('offlineReviews');\n        objectStore.put(item);\n        return transaction.complete;\n      }).then(function () {\n        console.log(\"added to Offline Cache\");\n      }).catch(function (ex) {\n        console.log(\"Failed to Add to Offline Cache\");\n      });\n    }\n\n    /**\r\n     * Save review .\r\n     */\n\n  }, {\n    key: 'saveReview',\n    value: function saveReview(data) {\n\n      return fetch(DBHelper.REVIEW_DATABASE_URL(), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var reviews = [];\n        reviews.push(json);\n        DBHelper.addReviewsToCache(reviews);\n        console.log(\"Reviews were added to database\");\n      });\n    }\n  }, {\n    key: 'clearOfflineReviews',\n    value: function clearOfflineReviews() {\n\n      DBHelper.DBOpen().then(function (db) {\n        var transaction = db.transaction(['offlineReviews'], 'readwrite');\n        var objectStore = transaction.objectStore('offlineReviews');\n        objectStore.clear();\n      }).then(function () {\n        console.log(\"Offline Reviews were deleted\");\n      }).catch(function (ex) {\n        console.log(\"Failed to delete offline Reviews\");\n      });\n    }\n  }, {\n    key: 'sendReview',\n    value: function sendReview(data) {\n\n      return fetch(DBHelper.REVIEW_DATABASE_URL(), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        //console.log(json)\n        DBHelper.clearOfflineReviews();\n        console.log(\"Reviews were added to database\");\n      }).catch(function (ex) {\n        console.log('Failed to add review to database');\n      });\n    }\n  }, {\n    key: 'sendOfflineReviewsToDatabse',\n    value: function sendOfflineReviewsToDatabse() {\n      return DBHelper.getAllReviewsFromOfflineCache().then(function (reviews) {\n        reviews.forEach(function (data) {\n          return DBHelper.sendReview(data);\n        });\n      }).catch(function (ex) {\n        console.log(\"Coudnt Open Offline Cache\");\n      });\n    }\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n\n  }, {\n    key: 'RESTAURANT_DATABASE_URL',\n    value: function RESTAURANT_DATABASE_URL() {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port + '/restaurants';\n    }\n  }, {\n    key: 'REVIEWS_DATABASE_URL',\n    value: function REVIEWS_DATABASE_URL(id) {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port + '/reviews/?restaurant_id=' + id;\n    }\n  }, {\n    key: 'REVIEW_DATABASE_URL',\n    value: function REVIEW_DATABASE_URL() {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port + '/reviews/';\n    }\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n\n  }, {\n    key: 'fetchRestaurants',\n    value: function fetchRestaurants(callback) {\n\n      DBHelper.getRestaurantsFromCache().then(function (restaurants) {\n\n        if (restaurants.length > 0) {\n          callback(null, restaurants);\n          return;\n        }\n        fetch(DBHelper.RESTAURANT_DATABASE_URL()).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          var restaurants = json;\n          DBHelper.addRestaurantsToCache(restaurants);\n\n          callback(null, restaurants);\n        }).catch(function (ex) {\n          var error = 'Request From Database failed.';\n          callback(error, null);\n        });\n      }).catch(function (ex) {\n        var error = 'Checking Cache failed';\n        callback(error, null);\n      });\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var restaurant = restaurants.find(function (r) {\n            return r.id == id;\n          });\n          if (restaurant) {\n            // Got the restaurant\n            callback(null, restaurant);\n          } else {\n            // Restaurant does not exist in the database\n            callback('Restaurant does not exist', null);\n          }\n        }\n      });\n    }\n\n    /**\r\n     * Fetch a review by restaurant ID.\r\n     */\n\n  }, {\n    key: 'fetchReviewById',\n    value: function fetchReviewById(id, callback) {\n      fetch(DBHelper.REVIEWS_DATABASE_URL(id)).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var reviews = json;\n        DBHelper.addReviewsToCache(reviews);\n        callback(null, reviews);\n      }).catch(function (ex) {\n        var error = 'Reviews Request failed. Cache mode';\n        callback(error, null);\n        Promise.all([DBHelper.getReviewsFromCache(id), DBHelper.getReviewsFromOfflineCache(id)]).then(function (reviews) {\n          var _ref;\n\n          callback(null, (_ref = []).concat.apply(_ref, _toConsumableArray(reviews)));\n        }).catch(function (ex) {\n          var error = 'getting cache reviews  failed';\n          callback(error, null);\n        });\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'imageUrlForRestaurant',\n    value: function imageUrlForRestaurant(restaurant) {\n\n      return restaurant.id;\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      var marker = new google.maps.Marker({\n        position: restaurant.latlng,\n        title: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant),\n        map: map,\n        animation: google.maps.Animation.DROP });\n      return marker;\n    }\n  }]);\n\n  return DBHelper;\n}();\n\nexports.default = DBHelper;\n\n},{\"idb\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./js/dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar appCache = 'mws-static-cache-v1';\nvar imgsCache = 'mws-asset-cache-v1';\nvar allCaches = [appCache, imgsCache];\nvar urlsToCache = ['/', '/css/styles.css', '/index.html', '/restaurant.html', 'js/main_bundle.js', 'js/restaurant_bundle.js'];\n\nself.addEventListener('install', function (event) {\n    event.waitUntil(caches.open(appCache).then(function (cache) {\n        return cache.addAll(urlsToCache);\n    }));\n});\n\nself.addEventListener('fetch', function (event) {\n    var requestUrl = new URL(event.request.url);\n\n    if (requestUrl.pathname.startsWith('/images/') || requestUrl.pathname.includes('staticmap')) {\n        event.respondWith(servePhoto(event.request));\n        return;\n    }\n    event.respondWith(caches.match(event.request, { ignoreSearch: true }).then(function (response) {\n        return response || fetch(event.request);\n    }));\n});\n\nfunction servePhoto(request) {\n\n    return caches.open(imgsCache).then(function (cache) {\n        return cache.match(request.url).then(function (response) {\n            if (response) return response;\n\n            return fetch(request).then(function (networkResponse) {\n                cache.put(request.url, networkResponse.clone());\n                return networkResponse;\n            });\n        });\n    });\n}\n\nself.addEventListener('sync', function (event) {\n    if (event.tag == 'offline') {\n        event.waitUntil(_dbhelper2.default.sendOfflineReviewsToDatabse());\n    }\n});\n\nself.addEventListener('activate', function (event) {\n    event.waitUntil(caches.keys().then(function (cacheNames) {\n        return Promise.all(cacheNames.filter(function (cacheName) {\n            return cacheName.startsWith('mws-') && !allCaches.includes(cacheName);\n        }).map(function (cacheName) {\n            return caches['delete'](cacheName);\n        }));\n    }));\n});\n\n},{\"./js/dbhelper\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}]},{},[2]);\n"]}